{"version":3,"sources":["countryjs.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"countryjs.js","sourcesContent":["// Copyright (c) 2015, Trent Oswald <trentoswald@therebelrobot.com\n//\n// Permission to use, copy, modify, and/or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT,\n// OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\n// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS\n// ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\nvar _ = require('lodash')\nvar _countryList = require('../data')()\nvar normalizeName = function (name) {\n  return _.deburr(name)\n    .toLowerCase()\n    .replace(/\\-/g, ' ')\n    .replace(/(\\.|\\b(the|and|of|de|des|du|di|del|y|da|und|die) \\b)/g, '')\n    .trim()\n}\nvar findIndex = _.transform(_countryList, function (index, country, key) {\n  var addToIndex = function (name) {\n    if (name) {\n      index[normalizeName(name)] = key\n    }\n  }\n  addToIndex(country.name)\n  _.forEach(country.altSpellings, addToIndex)\n  _.forEach(country.translations, addToIndex)\n})\nvar Country = function () {\n  var _returnCountry = function (country, type) {\n    if (type === 'name') {\n      var key = findIndex[normalizeName(country)]\n      return _countryList[key]\n    } else if (type === 'ISO3') {\n      return _.find(_countryList, function (thiscountry) {\n        return thiscountry.ISO.alpha3 === country\n      })\n    } else {\n      return _.find(_countryList, function (thiscountry) {\n        return thiscountry.ISO.alpha2 === country\n      })\n    }\n  }\n  this.all = function () {\n    return _countryList\n  }\n  var methods = {\n    info: null,\n    name: 'name',\n    states: 'provinces',\n    provinces: 'provinces',\n    altSpellings: 'altSpellings',\n    area: 'area',\n    borders: 'borders',\n    callingCodes: 'callingCodes',\n    capital: 'capital',\n    currencies: 'currencies',\n    demonym: 'demonym',\n    flag: 'flag',\n    geoJSON: 'geoJSON',\n    ISOcodes: 'ISO',\n    languages: 'languages',\n    latlng: 'latlng',\n    nativeName: 'nativeName',\n    population: 'population',\n    region: 'region',\n    subregion: 'subregion',\n    timezones: 'timezones',\n    tld: 'tld',\n    translations: 'translations',\n    wiki: 'wiki'\n  }\n  _.forEach(methods, function (property, method) {\n    this[method] = function (country, type) {\n      var _returnData = _returnCountry(country, type)\n      if (_returnData) {\n        if (property) {\n          return _returnData[property]\n        }\n        return _returnData\n      }\n    }\n  }.bind(this))\n  return this\n}\nmodule.exports = new Country()\n"],"sourceRoot":"/source/"}